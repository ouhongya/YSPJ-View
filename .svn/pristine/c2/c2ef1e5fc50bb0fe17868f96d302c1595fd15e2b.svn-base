<template>
	<view class="main">
		<a-head text="题库管理" bgColor="#4abdb4"></a-head>
		<view>
			<view class="part-top">
				<view class="part color1" @click="toSubject()"><view class="txt">新增试题</view></view>
				<view class="part color2" @click="newBase()"><view class="txt">新增题库</view></view>
			</view>
			<view class="content">
				<!-- 折叠面板 -->
				<scroll-view class="collapsePart" scroll-y="true">
					<mescroll-uni :top="0" @down="downCallback" @up="upCallback" :up="upOption" @init="mescrollInit" ref="mescrollRef" :height="600 + 'px'">
						<uni-swipe-action>
							<uni-swipe-action-item
								class="swipe"
								v-for="(item, index) in collapseList"
								:right-options="item.options"
								:key="index"
								@change="open($event, index)"
								@click="click($event, index)"
							>
								<view class="u-collapse-item">
									<view :hover-stay-time="200" class="u-collapse-head" @tap="headClick(index)">
										<view class="u-icon-wrap">
											<u-icon :class="{ 'u-arrow-down-icon-active': false }" class="u-arrow-down-icon" name="arrow-down"></u-icon>
										</view>
										<view class="u-collapse-title">{{ item.name }}</view>
									</view>
									<!-- v-if="item.isShow" -->
									<view class="u-collapse-body" v-if="false">
										<view class="u-collapse-content">
											<view class="lead">
												<u-subsection
													:list="item.listpart"
													:current="item.curNow"
													@change="sectionChange(index)"
													active-color="#4abdb4"
													inactive-color="#999999"
												></u-subsection>
											</view>
											<view class="center" v-for="(i, index1) in item.listpart[item.curNow].list" :key="index1">
												<view class="list-center" v-if="item.curNow == 0">
													<view class="left"><image src="../../static/excel11.png" mode=""></image></view>
													<view class="right">
														<view class="title">{{ i.title }}</view>
														<view class="sub-title">
															<view class="sub1">
																单选:
																<text>50</text>
															</view>
															<view class="sub1">
																多选:
																<text>50</text>
															</view>
															<view class="sub1">
																判断:
																<text>50</text>
															</view>
														</view>
														<view class="sub-title">
															<view class="sub">
																<image src="../../static/person.png" mode=""></image>
																<text>张三</text>
															</view>
															<view class="sub">
																<image src="../../static/time.png" mode=""></image>
																<text>2020-09-03</text>
															</view>
														</view>

														<view class="action-part">
															<view class="action stop">停用</view>
															<view class="action start">启用</view>
															<view class="action del">删除</view>
														</view>
													</view>
												</view>
												<view class="list-center" v-if="item.curNow == 1" @click="editSubject(index, index1)">
													<view class="sigle-right">
														<view class="title">
															<text>{{ index1 + 1 }}</text>
															.
															<text>{{ i.typename }}</text>
															:
															<text>{{ i.title }}</text>
														</view>
													</view>
												</view>
											</view>
										</view>
									</view>
								</view>
							</uni-swipe-action-item>
						</uni-swipe-action>
					</mescroll-uni>
				</scroll-view>
			</view>
		</view>
		<!-- 删除确认框 -->
		<u-modal
			v-model="showrightdel"
			@confirm="rightdelConfirm"
			content="您确认要删除该题库吗？"
			:show-title="false"
			:show-cancel-button="true"
			:confirm-style="{ color: '#fa3534' }"
		></u-modal>
		<view class="empty"><a-empty :changing="false"></a-empty></view>
		<!-- 新增题库 -->
		<u-modal v-model="showBase" @confirm="newConfirm" ref="uModal" :async-close="true" :show-cancel-button="true" :confirm-style="{ color: '#4abdb4' }" :show-title="false">
			<view class="slot-content">
				<view class="model">
					<view class="rename"><u-input v-model="basename" type="text" :border="true" placeholder="请输入题库名称" /></view>
					<view class="tips">名称长度范围为2-20个字符，请勿输入特殊符号</view>
				</view>
			</view>
		</u-modal>
		<!-- 消息提示 -->
		<u-toast ref="uToast" />
		<!--页面加载动画-->
		<rfLoading :active="loading"></rfLoading>
	</view>
</template>
<script>
import { queryQuestionBankList, addQuestionBank, deleteQuestionBank, statusQuestionBank } from '@/api/exam/testbase.js';
import debounce from '@/uview-ui/libs/function/debounce.js';
export default {
	data() {
		return {
			mescroll: null,
			upOption: {
				noMoreSize: 5,
				textNoMore: '我也是有底线的~'
			},
			loading: false,
			showrightdel: false,
			rightdelIndex: 0,
			editlock: false,
			subjectlock: false,
			showBase: false,
			basename: '',
			collapseList: [
				{
					typename: 'xxx分类',
					isShow: true,
					show: false,
					curNow: 0,
					options: [
						{
							text: '停用',
							style: {
								backgroundColor: '#ff9900'
							}
						},
						{
							text: '删除',
							style: {
								backgroundColor: '#fa3534'
							}
						}
					],
					listpart: [
						{
							name: '批量录入',
							type: 1,

							list: [
								{
									title: '标题标题1'
								}
							]
						},
						{
							name: '单个录入',
							type: 2,

							list: [
								{
									title: '标题标题2',
									typename: '多选'
								},

								{
									title: '标题标题2',
									typename: '单选'
								},
								{
									title: '标题标题2',
									typename: '判断'
								},
								{
									title: '标题标题2',
									typename: '多选'
								}
							]
						}
					]
				}
			]
		};
	},
	created() {
		this.loading = true;
	},
	mounted() {
		setTimeout(() => {
			this.loading = false;
		}, 200);
	},
	methods: {
		//初始化请求数据
		mescrollInit(mescroll) {
			this.mescroll = mescroll;
		},
		// 下拉刷新
		downCallback(mescroll) {
			this.mescroll.resetUpScroll();
		},
		// 上拉回调
		upCallback(mescroll) {
			queryQuestionBankList(mescroll.num, mescroll.size).then(res => {
				if (res && res.list.length) {
					mescroll.endByPage(res.size, res.pages);
					//设置列表数据
					if (mescroll.num == 1) this.collapseList = []; //如果是第一页需手动制空列表
					res.list.forEach(item => {
						if (item.isFlag == 1) {
							item.options = [{
									text: '删除',
									style: {
										backgroundColor: '#fa3534'
									}
								}
							];
							if(item.status==0){
								item.options.unshift({
									text: '停用',
									style: {
										backgroundColor: '#ff9900'
									}
								})
							}else{
								item.options.unshift({
									text: '启用',
									style: {
										backgroundColor: '#ff9999'
									}
								})
							}
						} else {
							item.options = [];
						}
					});
					this.collapseList = this.collapseList.concat(res.list); //追加新数据
				} else {
					this.collapseList = [];
					// 隐藏下拉加载状态
					mescroll.endErr();
				}
			});
		},
		//新增试题
		toSubject() {
			if (this.subjectlock) return;
			this.subjectlock = true;
			uni.navigateTo({
				url: './subject'
			});
			setTimeout(() => {
				this.subjectlock = false;
			}, 500);
		},
		//新增题库
		newBase() {
			this.showBase = true;
		},
		//新增题库确认
		newConfirm() {
			addQuestionBank(this.basename).then(res => {
				if (res == 'SUCCESS') {
					this.basename = ""
					this.mescroll.resetUpScroll();
					this.showBase = false;
				} else {
					uni.showToast({
						title: '题库名称重复',
						icon: 'none'
					});
					this.$refs.uModal.clearLoading();
				}
			});
		},
		headClick(index) {
			this.collapseList[index].isShow = !this.collapseList[index].isShow;
			this.collapseList.map((e, idx) => {
				if (idx != index) {
					e.isShow = false;
				}
			});
		},
		sectionChange(index) {
			if (this.collapseList[index].curNow == 0) {
				this.collapseList[index].curNow = 1;
			} else if (this.collapseList[index].curNow == 1) {
				this.collapseList[index].curNow = 0;
			}
		},
		open(e, index) {
			this.collapseList[index].show = true;
			this.collapseList.map((val, idx) => {
				if (index != idx) this.collapseList[idx].show = false;
			});
		},
		click(e, index) {
			let { content } = e;
			if (content.text === '删除') {
				this.rightdelIndex = index;
				this.showrightdel = true;
			}
			if (content.text === '停用'||content.text === '启用') {
				let data = this.collapseList[index]
				let status = data.status == 0 ? 2:0;
				statusQuestionBank(this.collapseList[index].id,status).then(res=>{
					this.mescroll.resetUpScroll();
				})
			}
		},
		rightdelConfirm() {
			deleteQuestionBank(this.collapseList[this.rightdelIndex].id).then(res=>{
				this.collapseList[this.rightdelIndex].show = false;
				this.collapseList.splice(this.rightdelIndex, 1);
				this.showrightdel = false;
				uni.showToast({
					title: '删除成功',
					icon: 'none'
				});
				this.mescroll.resetUpScroll();
			})
		},
		editSubject(index, index1) {
			if (this.editlock) return;
			this.editlock = true;
			uni.navigateTo({
				url: './edit'
			});
			setTimeout(() => {
				this.editlock = false;
			}, 500);
		}
	}
};
</script>

<style lang="less" scoped>
page {
	background: #ffffff;
}

.main {
	padding: 30rpx;
}

.model {
	padding: 30rpx;

	.rename {
		margin: 20rpx 0;
	}

	.stop {
		font-size: #333333;
		line-height: 50rpx;
		font-size: 32rpx;
		margin: 20rpx 0;
	}

	.tips {
		font-size: 28rpx;
		color: #999999;
	}
}

.part-top {
	padding: 30rpx 0 10rpx;
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex-wrap: wrap;

	.part {
		width: 45%;
		text-align: center;
		border-radius: 10rpx;
		height: 70rpx;
		line-height: 70rpx;
		background: #f6fff9;
		box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);
		margin-bottom: 40rpx;

		.txt {
			font-size: 30rpx;
			color: #ffffff;
			letter-spacing: 3px;
		}
	}

	.color1 {
		background: linear-gradient(to right, #ba6cfd, #ab33f1);
	}

	.color2 {
		background: linear-gradient(to right, #50e299, #19be6b);
	}
}

/deep/.u-subsection {
	padding: 0 3px !important;
}

.content {
	border: 1px solid #eeeeee;
	padding: 0 20rpx;

	.collapsePart {
		.u-collapse-item {
			width: 100%;
		}

		.u-collapse-head {
			display: flex;
			align-items: center;
			color: #333333;
			font-size: 28rpx;
			line-height: 1;
			padding: 10rpx 20rpx 10rpx 6rpx;
			border-bottom: 2rpx solid #f6f6f6;
		}

		.u-collapse-title {
			line-height: 60rpx;
			overflow: hidden;
			text-overflow: ellipsis;
			display: -webkit-box;
			-webkit-line-clamp: 2;
			-webkit-box-orient: vertical;
		}

		.u-arrow-down-icon {
			transition: all 0.3s;
			padding-right: 20rpx;
			padding-left: 14rpx;
		}

		.u-arrow-down-icon-active {
			transform: rotate(180deg);
			transform-origin: center center;
		}

		.u-collapse-body {
			transition: all 0.3s;
		}

		.u-collapse-content {
			padding: 20rpx 0;

			.center {
				.list-center {
					display: flex;
					border: 1px solid #eeeeee;
					padding: 20rpx;
					margin: 10rpx 0 20rpx;
					border-radius: 10rpx;

					.sigle-right {
						.title {
							overflow: hidden;
							text-overflow: ellipsis;
							display: -webkit-box;
							-webkit-line-clamp: 2;
							-webkit-box-orient: vertical;
							word-break: break-all;
							color: #333333;
							line-height: 40rpx;
							font-size: 28rpx;

							text {
								margin: 0 6rpx;
							}
						}
					}
				}

				.left {
					padding-top: 60rpx;

					image {
						width: 100rpx;
						height: 100rpx;
						padding-right: 20rpx;
					}
				}

				.right {
					width: 100%;
					flex: 1;

					.title {
						overflow: hidden;
						text-overflow: ellipsis;
						display: -webkit-box;
						-webkit-line-clamp: 2;
						-webkit-box-orient: vertical;
						word-break: break-all;
						color: #333333;
						line-height: 50rpx;
						font-size: 30rpx;
					}

					.sub-title {
						display: flex;
						color: #666666;
						font-size: 28rpx;
						padding: 10rpx 0;

						.sub {
							display: flex;
							align-items: center;

							image {
								width: 30rpx;
								height: 30rpx;
								margin-right: 10rpx;
							}

							margin-right: 60rpx;

							text {
								margin: 0 6rpx;
							}
						}

						.sub1 {
							margin-right: 30rpx;

							text {
								margin: 0 6rpx;
							}
						}
					}
				}

				.action-part {
					display: flex;
					justify-content: flex-end;
					align-items: center;
					margin-top: 20rpx;

					.action {
						width: 100rpx;
						height: 50rpx;
						line-height: 50rpx;
						text-align: center;
						font-size: 28rpx;
						border-radius: 10rpx;
						margin-left: 20rpx;
						border: 1px solid #eeeeee;
					}

					.stop {
						color: #ff9900;
					}

					.start {
						color: #19be6b;
					}

					.del {
						color: #fa3534;
					}
				}
			}
		}
	}
}
</style>
